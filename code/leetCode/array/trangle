// 在杨辉三角中，每个数是它左上方和右上方的数的和。
//
// 示例:
//
//   输入: 5
// 输出:
//   [
//     [1],
//     [1,1],
//     [1,2,1],
//     [1,3,3,1],
//     [1,4,6,4,1]
//   ]


/**
 * @param {number} numRows
 * @return {number[][]}
 */
var generate = function(numRows) {
  let row = [];
  for (let i = 0; i < numRows; i++) {
    row[i] = [];
    for (let j = 0; j < i+1; j++) {
      if (j === 0 || j === i) {
        row[i].push(1);
      } else {
        row[i].push(row[i-1][j-1] + row[i-1][j]);
      }
    }
  }
  console.log(row);
  return row;
};

// generate(0);



// 给定一个非负索引 k，其中 k ≤ 33，返回杨辉三角的第 k 行。

/**
 * @param {number} rowIndex
 * @return {number[]}
 */
var getRow = function(rowIndex) {
  let row = [];
  for (let i = 0; i < rowIndex; i++) {
    row[i] = [];
    for (let j = 0; j < i+1; j++) {
      if (j === 0 || j === i) {
        row[i].push(1);
      } else {
        row[i].push(row[i-1][j-1] + row[i-1][j]);
      }
    }
  }
  console.log(row[rowIndex-1])
  return row[rowIndex-1];
};

getRow(3);


